name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:

  test:
    if: github.event_name == 'do_not_run'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: install dependencies
        run: sudo apt-get install -y libmad0-dev
      - name: build
        run: |
          python config_unix.py
          python setup.py build
          python -m compileall -f .

  build_linux1_64:
    if: github.event_name == 'do_not_run'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Execute the build
        uses: docker://quay.io/pypa/manylinux1_x86_64
        with:
          entrypoint: bash
          args: /github/workspace/.github/workflows/build.sh
      - name: Archive built wheels
        uses: actions/upload-artifact@v2
        with:
          name: manylinux1_64
          path: build/*.whl
          if-no-files-found: error

  publish_linux1_64:
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: [ build_linux1_64 ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      id: download
      with:
        name: manylinux1_64

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: ${{ steps.download.outputs.download-path }}

  build_linux1_32:
    if: github.event_name == 'do_not_run'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Execute the build
        uses: docker://quay.io/pypa/manylinux1_i686
        with:
          entrypoint: linux32
          args: bash /github/workspace/.github/workflows/build.sh
      - name: Archive built wheels
        uses: actions/upload-artifact@v2
        with:
          name: manylinux1_32
          path: build/*.whl
          if-no-files-found: error

  publish_linux1_32:
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: [ build_linux1_32 ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      id: download
      with:
        name: manylinux1_32

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: ${{ steps.download.outputs.download-path }}

  build_linux2_24_64:
    if: github.event_name == 'do_not_run'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Execute the build
        uses: docker://quay.io/pypa/manylinux_2_24_x86_64
        with:
          entrypoint: bash
          args: /github/workspace/.github/workflows/build.sh
      - name: Archive built wheels
        uses: actions/upload-artifact@v2
        with:
          name: manylinux2_24_64
          path: build/*.whl
          if-no-files-found: error

  publish_linux2_24_64:
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: [ build_linux2_24_64 ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      id: download
      with:
        name: manylinux2_24_64

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: ${{ steps.download.outputs.download-path }}

  build_linux2_24_32:
    if: github.event_name == 'do_not_run'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Execute the build
        uses: docker://quay.io/pypa/manylinux_2_24_i686
        with:
          entrypoint: linux32
          args: bash /github/workspace/.github/workflows/build.sh
      - name: Archive built wheels
        uses: actions/upload-artifact@v2
        with:
          name: manylinux2_24_32
          path: build/*.whl
          if-no-files-found: error

  publish_linux2_24_32:
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: [ build_linux2_24_32 ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      id: download
      with:
        name: manylinux2_24_32

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: ${{ steps.download.outputs.download-path }}

  build_windows:
    runs-on: windows-latest

    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
        arch: ['-AWin32', '-Ax64']
        python-arch: ['x86', 'x64']
        exclude:
          - arch: '-AWin32'
            python-arch: 'x64'
          - arch: '-Ax64'
            python-arch: 'x86'

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.python-arch }}
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: python -m pip install --upgrade setuptools wheel
      - uses: suisei-cn/actions-download-file@v1
        id: downloadfile
        name: Download libmad ZIP file
        with:
          url: "https://github.com/oleksiyskorodumov/libmad/tarball/master"
          target: libmad_tar
      - name: Extract libmad arcive
        run: tar -xzf libmad_tar/${{ steps.downloadfile.outputs.filename }} -C libmad --strip-components 1
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        with:
          vs-version: '[17.2,17.3)'
      - name: Build libmad
        run: |
          msbuild "libmad\msvc++\libmad.vcxproj" /p:Configuration=Release
      - name: Build Wheel
        run: |
          python setup.py bdist_wheel -b build/build_tmp -d build
      - name: Archive built wheels
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: build/*.whl
          if-no-files-found: error
